/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";

export declare namespace GlvDeposit {
  export type AddressesStruct = {
    glv: string;
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    market: string;
    initialLongToken: string;
    initialShortToken: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type AddressesStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string,
    string[],
    string[]
  ] & {
    glv: string;
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    market: string;
    initialLongToken: string;
    initialShortToken: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type NumbersStruct = {
    marketTokenAmount: BigNumberish;
    initialLongTokenAmount: BigNumberish;
    initialShortTokenAmount: BigNumberish;
    minGlvTokens: BigNumberish;
    updatedAtTime: BigNumberish;
    executionFee: BigNumberish;
    callbackGasLimit: BigNumberish;
  };

  export type NumbersStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    marketTokenAmount: BigNumber;
    initialLongTokenAmount: BigNumber;
    initialShortTokenAmount: BigNumber;
    minGlvTokens: BigNumber;
    updatedAtTime: BigNumber;
    executionFee: BigNumber;
    callbackGasLimit: BigNumber;
  };

  export type FlagsStruct = {
    shouldUnwrapNativeToken: boolean;
    isMarketTokenDeposit: boolean;
  };

  export type FlagsStructOutput = [boolean, boolean] & {
    shouldUnwrapNativeToken: boolean;
    isMarketTokenDeposit: boolean;
  };

  export type PropsStruct = {
    addresses: GlvDeposit.AddressesStruct;
    numbers: GlvDeposit.NumbersStruct;
    flags: GlvDeposit.FlagsStruct;
  };

  export type PropsStructOutput = [
    GlvDeposit.AddressesStructOutput,
    GlvDeposit.NumbersStructOutput,
    GlvDeposit.FlagsStructOutput
  ] & {
    addresses: GlvDeposit.AddressesStructOutput;
    numbers: GlvDeposit.NumbersStructOutput;
    flags: GlvDeposit.FlagsStructOutput;
  };
}

export declare namespace GlvWithdrawal {
  export type AddressesStruct = {
    glv: string;
    market: string;
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type AddressesStructOutput = [
    string,
    string,
    string,
    string,
    string,
    string,
    string[],
    string[]
  ] & {
    glv: string;
    market: string;
    account: string;
    receiver: string;
    callbackContract: string;
    uiFeeReceiver: string;
    longTokenSwapPath: string[];
    shortTokenSwapPath: string[];
  };

  export type NumbersStruct = {
    glvTokenAmount: BigNumberish;
    minLongTokenAmount: BigNumberish;
    minShortTokenAmount: BigNumberish;
    updatedAtTime: BigNumberish;
    executionFee: BigNumberish;
    callbackGasLimit: BigNumberish;
  };

  export type NumbersStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    glvTokenAmount: BigNumber;
    minLongTokenAmount: BigNumber;
    minShortTokenAmount: BigNumber;
    updatedAtTime: BigNumber;
    executionFee: BigNumber;
    callbackGasLimit: BigNumber;
  };

  export type FlagsStruct = { shouldUnwrapNativeToken: boolean };

  export type FlagsStructOutput = [boolean] & {
    shouldUnwrapNativeToken: boolean;
  };

  export type PropsStruct = {
    addresses: GlvWithdrawal.AddressesStruct;
    numbers: GlvWithdrawal.NumbersStruct;
    flags: GlvWithdrawal.FlagsStruct;
  };

  export type PropsStructOutput = [
    GlvWithdrawal.AddressesStructOutput,
    GlvWithdrawal.NumbersStructOutput,
    GlvWithdrawal.FlagsStructOutput
  ] & {
    addresses: GlvWithdrawal.AddressesStructOutput;
    numbers: GlvWithdrawal.NumbersStructOutput;
    flags: GlvWithdrawal.FlagsStructOutput;
  };
}

export declare namespace Glv {
  export type PropsStruct = {
    glvToken: string;
    longToken: string;
    shortToken: string;
  };

  export type PropsStructOutput = [string, string, string] & {
    glvToken: string;
    longToken: string;
    shortToken: string;
  };
}

export declare namespace IGlvReader {
  export type GlvInfoStruct = { glv: Glv.PropsStruct; markets: string[] };

  export type GlvInfoStructOutput = [Glv.PropsStructOutput, string[]] & {
    glv: Glv.PropsStructOutput;
    markets: string[];
  };
}

export declare namespace GlvShift {
  export type AddressesStruct = {
    glv: string;
    fromMarket: string;
    toMarket: string;
  };

  export type AddressesStructOutput = [string, string, string] & {
    glv: string;
    fromMarket: string;
    toMarket: string;
  };

  export type NumbersStruct = {
    marketTokenAmount: BigNumberish;
    minMarketTokens: BigNumberish;
    updatedAtTime: BigNumberish;
  };

  export type NumbersStructOutput = [BigNumber, BigNumber, BigNumber] & {
    marketTokenAmount: BigNumber;
    minMarketTokens: BigNumber;
    updatedAtTime: BigNumber;
  };

  export type PropsStruct = {
    addresses: GlvShift.AddressesStruct;
    numbers: GlvShift.NumbersStruct;
  };

  export type PropsStructOutput = [
    GlvShift.AddressesStructOutput,
    GlvShift.NumbersStructOutput
  ] & {
    addresses: GlvShift.AddressesStructOutput;
    numbers: GlvShift.NumbersStructOutput;
  };
}

export declare namespace GlvPrice {
  export type PropsStruct = { min: BigNumberish; max: BigNumberish };

  export type PropsStructOutput = [BigNumber, BigNumber] & {
    min: BigNumber;
    max: BigNumber;
  };
}

export interface IGlvReaderInterface extends utils.Interface {
  functions: {
    "getAccountGlvDeposits(address,address,uint256,uint256)": FunctionFragment;
    "getAccountGlvWithdrawals(address,address,uint256,uint256)": FunctionFragment;
    "getGlv(address,address)": FunctionFragment;
    "getGlvBySalt(address,bytes32)": FunctionFragment;
    "getGlvDeposit(address,bytes32)": FunctionFragment;
    "getGlvDeposits(address,uint256,uint256)": FunctionFragment;
    "getGlvInfo(address,address)": FunctionFragment;
    "getGlvInfoList(address,uint256,uint256)": FunctionFragment;
    "getGlvShift(address,bytes32)": FunctionFragment;
    "getGlvShifts(address,uint256,uint256)": FunctionFragment;
    "getGlvTokenPrice(address,address[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),address,bool)": FunctionFragment;
    "getGlvValue(address,address[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),address,bool)": FunctionFragment;
    "getGlvWithdrawal(address,bytes32)": FunctionFragment;
    "getGlvWithdrawals(address,uint256,uint256)": FunctionFragment;
    "getGlvs(address,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAccountGlvDeposits"
      | "getAccountGlvWithdrawals"
      | "getGlv"
      | "getGlvBySalt"
      | "getGlvDeposit"
      | "getGlvDeposits"
      | "getGlvInfo"
      | "getGlvInfoList"
      | "getGlvShift"
      | "getGlvShifts"
      | "getGlvTokenPrice"
      | "getGlvValue"
      | "getGlvWithdrawal"
      | "getGlvWithdrawals"
      | "getGlvs"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAccountGlvDeposits",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAccountGlvWithdrawals",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlv",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvBySalt",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvDeposit",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvDeposits",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvInfo",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvInfoList",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvShift",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvShifts",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvTokenPrice",
    values: [
      string,
      string[],
      GlvPrice.PropsStruct[],
      GlvPrice.PropsStruct,
      GlvPrice.PropsStruct,
      string,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvValue",
    values: [
      string,
      string[],
      GlvPrice.PropsStruct[],
      GlvPrice.PropsStruct,
      GlvPrice.PropsStruct,
      string,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvWithdrawal",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvWithdrawals",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getGlvs",
    values: [string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAccountGlvDeposits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccountGlvWithdrawals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getGlv", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getGlvBySalt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvDeposits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getGlvInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getGlvInfoList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvShift",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvShifts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvTokenPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvWithdrawal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlvWithdrawals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getGlvs", data: BytesLike): Result;

  events: {};
}

export interface IGlvReader extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGlvReaderInterface;

  functions: {
    getAccountGlvDeposits(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[GlvDeposit.PropsStructOutput[]]>;

    getAccountGlvWithdrawals(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[GlvWithdrawal.PropsStructOutput[]]>;

    getGlv(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<[Glv.PropsStructOutput]>;

    getGlvBySalt(
      dataStore: string,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<[Glv.PropsStructOutput]>;

    getGlvDeposit(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[GlvDeposit.PropsStructOutput]>;

    getGlvDeposits(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[GlvDeposit.PropsStructOutput[]]>;

    getGlvInfo(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<[IGlvReader.GlvInfoStructOutput]>;

    getGlvInfoList(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IGlvReader.GlvInfoStructOutput[]]>;

    getGlvShift(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[GlvShift.PropsStructOutput]>;

    getGlvShifts(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[GlvShift.PropsStructOutput[]]>;

    getGlvTokenPrice(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getGlvValue(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getGlvWithdrawal(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[GlvWithdrawal.PropsStructOutput]>;

    getGlvWithdrawals(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[GlvWithdrawal.PropsStructOutput[]]>;

    getGlvs(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Glv.PropsStructOutput[]]>;
  };

  getAccountGlvDeposits(
    dataStore: string,
    account: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<GlvDeposit.PropsStructOutput[]>;

  getAccountGlvWithdrawals(
    dataStore: string,
    account: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<GlvWithdrawal.PropsStructOutput[]>;

  getGlv(
    dataStore: string,
    glv: string,
    overrides?: CallOverrides
  ): Promise<Glv.PropsStructOutput>;

  getGlvBySalt(
    dataStore: string,
    salt: BytesLike,
    overrides?: CallOverrides
  ): Promise<Glv.PropsStructOutput>;

  getGlvDeposit(
    dataStore: string,
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<GlvDeposit.PropsStructOutput>;

  getGlvDeposits(
    dataStore: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<GlvDeposit.PropsStructOutput[]>;

  getGlvInfo(
    dataStore: string,
    glv: string,
    overrides?: CallOverrides
  ): Promise<IGlvReader.GlvInfoStructOutput>;

  getGlvInfoList(
    dataStore: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<IGlvReader.GlvInfoStructOutput[]>;

  getGlvShift(
    dataStore: string,
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<GlvShift.PropsStructOutput>;

  getGlvShifts(
    dataStore: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<GlvShift.PropsStructOutput[]>;

  getGlvTokenPrice(
    dataStore: string,
    marketAddresses: string[],
    indexTokenPrices: GlvPrice.PropsStruct[],
    longTokenPrice: GlvPrice.PropsStruct,
    shortTokenPrice: GlvPrice.PropsStruct,
    glv: string,
    maximize: boolean,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  getGlvValue(
    dataStore: string,
    marketAddresses: string[],
    indexTokenPrices: GlvPrice.PropsStruct[],
    longTokenPrice: GlvPrice.PropsStruct,
    shortTokenPrice: GlvPrice.PropsStruct,
    glv: string,
    maximize: boolean,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getGlvWithdrawal(
    dataStore: string,
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<GlvWithdrawal.PropsStructOutput>;

  getGlvWithdrawals(
    dataStore: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<GlvWithdrawal.PropsStructOutput[]>;

  getGlvs(
    dataStore: string,
    start: BigNumberish,
    end: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Glv.PropsStructOutput[]>;

  callStatic: {
    getAccountGlvDeposits(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<GlvDeposit.PropsStructOutput[]>;

    getAccountGlvWithdrawals(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<GlvWithdrawal.PropsStructOutput[]>;

    getGlv(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<Glv.PropsStructOutput>;

    getGlvBySalt(
      dataStore: string,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<Glv.PropsStructOutput>;

    getGlvDeposit(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<GlvDeposit.PropsStructOutput>;

    getGlvDeposits(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<GlvDeposit.PropsStructOutput[]>;

    getGlvInfo(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<IGlvReader.GlvInfoStructOutput>;

    getGlvInfoList(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<IGlvReader.GlvInfoStructOutput[]>;

    getGlvShift(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<GlvShift.PropsStructOutput>;

    getGlvShifts(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<GlvShift.PropsStructOutput[]>;

    getGlvTokenPrice(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getGlvValue(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvWithdrawal(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<GlvWithdrawal.PropsStructOutput>;

    getGlvWithdrawals(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<GlvWithdrawal.PropsStructOutput[]>;

    getGlvs(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Glv.PropsStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    getAccountGlvDeposits(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAccountGlvWithdrawals(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlv(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvBySalt(
      dataStore: string,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvDeposit(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvDeposits(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvInfo(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvInfoList(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvShift(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvShifts(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvTokenPrice(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvValue(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvWithdrawal(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvWithdrawals(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGlvs(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAccountGlvDeposits(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAccountGlvWithdrawals(
      dataStore: string,
      account: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlv(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvBySalt(
      dataStore: string,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvDeposit(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvDeposits(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvInfo(
      dataStore: string,
      glv: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvInfoList(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvShift(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvShifts(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvTokenPrice(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvValue(
      dataStore: string,
      marketAddresses: string[],
      indexTokenPrices: GlvPrice.PropsStruct[],
      longTokenPrice: GlvPrice.PropsStruct,
      shortTokenPrice: GlvPrice.PropsStruct,
      glv: string,
      maximize: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvWithdrawal(
      dataStore: string,
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvWithdrawals(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGlvs(
      dataStore: string,
      start: BigNumberish,
      end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
